version: '3.5'

services:
  db:
    # PostgreSQL 12 Database Server for the Django application in the production environment
    container_name: ms_django_db
    image: postgres:12
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./db/psql-init/db.sql:/docker-entrypoint-initdb.d/db.sql
      - postgres_data:/var/lib/postgresql/data/

  ms_django:
    # Django Application Server in the production environment
    container_name: ms_django
    tty: true
    build:
      context: ../
      dockerfile: ./docker/exampleDjangoProject/Dockerfile
      target: prod
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=exampleDjangoProject.settings.production
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ../:/home/web/exampleDjangoProject
      - static_volume:/home/web/exampleDjangoProject/exampleDjangoProject/staticfiles
    expose:
      - 8000

  nginx:
    # NGINX Web Server acting as a reverse proxy and static file server for the Django application in the production environment
    container_name: ms_django_nginx
    build: ../nginx
    ports:
      - 80:80
    depends_on:
      - ms_django
    volumes:
      - static_volume:/home/web/exampleDjangoProject/exampleDjangoProject/staticfiles

volumes:
  postgres_data:
  static_volume:
